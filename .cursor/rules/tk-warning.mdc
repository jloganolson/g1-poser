---
description: Critical Tkinter/MuJoCo threading compatibility warning
globs:
  - "**/*.py"
alwaysApply: true
---

# üö® Critical Threading Issue - XCB/Tkinter/MuJoCo

**CRITICAL**: This project has a threading compatibility issue when combining Tkinter GUI with MuJoCo viewer.

## The Problem
Using `ttk.Entry` or `tk.Entry` widgets alongside MuJoCo's viewer causes XCB threading crashes:
```
[xcb] Unknown sequence number while appending request
[xcb] Aborting, sorry about that.
python3: ../../src/xcb_io.c:157: append_pending_request: Assertion `!xcb_xlib_unknown_seq_number' failed
```

## Root Cause
- `ttk.Entry` widgets create XCB threading conflicts with MuJoCo's OpenGL viewer context
- This happens regardless of XInitThreads() calls
- The issue is specific to Entry widgets; other Tkinter widgets work fine

## Required Solutions

### 1. Never use Entry widgets
```python
# ‚ùå DON'T DO THIS - causes crashes
self._input = ttk.Entry(self, textvariable=self.my_var)

# ‚úÖ DO THIS INSTEAD - safe alternative
self._display = ttk.Label(self, text="0.000", relief="sunken", anchor="e")
def _update_display(*args):
    self._display.configure(text=f"{float(self.my_var.get()):.3f}")
self.my_var.trace_add("write", _update_display)
```

### 2. Defer mujoco operations until after viewer starts
```python
# ‚ùå DON'T DO THIS - during UI setup
site_id = mujoco.mj_name2id(model, mujoco.mjtObj.mjOBJ_SITE, "site_name")

# ‚úÖ DO THIS INSTEAD - after viewer starts
with mujoco.viewer.launch_passive(...) as viewer:
    # Now safe to do mujoco operations
    site_id = mujoco.mj_name2id(model, mujoco.mjtObj.mjOBJ_SITE, "site_name")
```

## Safe Widget Types
- ‚úÖ `ttk.Label` - Safe
- ‚úÖ `ttk.Button` - Safe  
- ‚úÖ `ttk.Checkbutton` - Safe
- ‚úÖ `ttk.Scale` - Safe
- ‚ùå `ttk.Entry` - **NEVER USE**
- ‚ùå `tk.Entry` - **NEVER USE**

## Testing Protocol
Always test GUI changes with: `uv run <script_name>.py`
If you see XCB threading errors, check for Entry widgets or early mujoco calls.

## Working Examples
- `mink_g1_pose_ik.py` - Working baseline (no Entry widgets)
- `temp.py` - Enhanced version with threading-safe workarounds

---
*This issue was discovered and resolved in December 2024 after extensive debugging.*